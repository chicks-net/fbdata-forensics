#!/usr/bin/env perl

use strict;
use warnings;
use Data::Dumper; # just for debugging
use File::Slurp qw(read_file);
#use LWP::Simple qw(get);
use HTML::TreeBuilder;

my ($data_dir) = @ARGV;

validate_dir($data_dir);

my ($who,$when) = get_download_timestamp();

parse_timeline();

parse_messages();

sub validate_dir {
	my ($data_dir) = @_;

	unless (-d $data_dir) {
		die "not a directory: $data_dir";
	}

	chdir($data_dir) or die "couldn't chdir($data_dir): $!";

	# needed for Download date
	unless (-f 'index.htm') {
		die "no index.htm";
	}

	foreach my $dir (qw( html messages photos videos)) {
		unless (-d $dir) {
			die "no $dir directory";
		}
	}

	# the timeline
	unless (-f 'html/timeline.htm') {
		die "no html/timeline.htm";
	}

	print "$data_dir looks like a Facebook data dump\n";
}

sub get_download_timestamp {
	#system("pwd");
	my $index_htm = read_file("index.htm");
	my $index_size = length($index_htm);
	print "got $index_size bytes in index.htm\n";

	my $tree = HTML::TreeBuilder->new;    # empty tree
	$tree->parse_content($index_htm);

#	$tree->dump;
	my $downloaded_div = $tree->look_down('_tag' => 'div', class => 'footer');
	my $downloaded_raw = $downloaded_div->as_text;
	$downloaded_raw =~ /Downloaded by (.+) on (.+)$/;
	my $who = $1;
	my $when = $2;
	return($who,$when);
}

sub parse_timeline {
	die "unimplemented parse";
}

sub parse_messages {
	die "unimplemented parse msg";
}
